# Generated by Selenium IDE
import time
import json
import subprocess
import random
import platform
from configparser import ConfigParser
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

config_object = ConfigParser()
config_object.read("config.ini")
print({section: dict(config_object[section]) for section in config_object.sections()})

def rotate_ip():
    if config_object["APP"]["vpn"] == "SPEEDIFY":
        try:
            if platform.system() == 'Windows':
                servers = subprocess.run([config_object["SPEEDIFY"]["path"], 'show', 'servers'], capture_output=True, text=True).stdout
                public_servers = (json.loads(servers))['public']
                my_servers = config_object["SPEEDIFY"]["servers"].split(",")
                filtered_servers = [p for p in public_servers if p['country'] in my_servers]
                random_server = random.choice(filtered_servers)
                print("Connecting to {}".format(random_server['tag']))
                connection_output = subprocess.run([config_object["SPEEDIFY"]["path"], 'connect', random_server['country'], random_server['city'], str(random_server['num'])], capture_output=True, text=True).stdout
                print("Now my IP is: {}".format((json.loads(connection_output))['publicIP']))
            else:
                print("Unable to rotate IP")
        except Exception as error:
            print("An exception occurred:", error)
    if config_object["APP"]["vpn"] == "WINDSCRIBE":
        try:
            my_servers = config_object["WINDSCRIBE"]["servers"].split(",")
            random_server = random.choice(my_servers)
            print("Connecting to {}".format(random_server))
            if platform.system() == 'Windows':
                connection_output = subprocess.run([config_object["WINDSCRIBE"]["path"], 'connect', random_server], capture_output=True, text=True).stdout
            elif platform.system() == 'Linux':
                connection_output = subprocess.run([config_object["WINDSCRIBE"]["path"], 'connect', random_server], capture_output=True, text=True).stdout
        except Exception as error:
            print("An exception occurred:", error)
    time.sleep(int(config_object["APP"]["wait_time"]))

def main():
    try:
        views_num_input = input("How many views do you need? ")
        views_num = int(views_num_input)
        medium_url = input("Which url? ")
        for iter in range(views_num):
            rotate_ip()
            print("Iteration: ", iter + 1)
            driver = webdriver.Chrome()
            driver.get(str(medium_url))
            driver.set_window_size(1366, 728)
            scroll = 0
            for n in range(20):
                scrolling = scroll + random.randrange(400, 600)
                print("Scrolling iter: ", n, " Scroll position: ", scrolling)
                driver.execute_script("window.scrollTo(0," + str(scrolling) + ")")
                scroll = scrolling
                wait_time = random.randrange(10, 20)
                print("Waiting: ", wait_time, " seconds")
                time.sleep(wait_time)
            driver.quit()
    except Exception as error:
        print("An exception occurred:", error)
  
if __name__ == '__main__':
    main()